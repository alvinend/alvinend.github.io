{"version":3,"file":"cms.9700bc0370ae987382ae.hot-update.js","sources":["webpack:///./src/templates/index-page.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport MainVisual from '../components/pages/index/MainVisual'\nimport AboutMe from '../components/pages/index/AboutMe'\nimport ImageSection from '../components/pages/index/ImageSection'\nimport Works from '../components/pages/index/Works'\nimport Experience from '../components/pages/index/Experience'\nimport BlogList from '../components/pages/index/BlogList'\n\nexport const IndexPageTemplate = ({ data, image, image2, works, image3, image4 }) => (\n  <Fragment>\n    <MainVisual image={image} />\n    <AboutMe />\n    <ImageSection\n      image={image2}\n      desc='Osaka Castle'\n      time=\"Nov 2019\"\n    />\n    <Works works={works} />\n    <Experience />\n    <BlogList />\n  </Fragment>\n)\n\nconst IndexPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <IndexPageTemplate\n        data={data}\n        image={frontmatter.image}\n        image2={frontmatter.image2}\n        works={frontmatter.works}\n        image3={frontmatter.image3}\n        image4={frontmatter.image4}\n      />\n    </Layout>\n  )\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexPageTemplate {\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\n      frontmatter {\n        title\n        desc\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        image2 {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        image3 {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        image4 {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        works {\n          title\n          desc\n          image {\n            childImageSharp {\n              fluid(maxWidth: 2048, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          github\n        }\n      }\n    }\n    allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 400)\n            id\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              templateKey\n              date(formatString: \"MMMM DD, YYYY\")\n              featuredpost\n            }\n          }\n        }\n      }\n  }\n`\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AACA;AAcA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AAAA;AAEA;;;;;;;;;;AA1CA;AAeA;AA2BA;;;;;;;;;;;;;;A","sourceRoot":""}